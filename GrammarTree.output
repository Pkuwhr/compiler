Terminals unused in grammar

   T_Dims
   T_StringConstant


Grammar

    0 $accept: Program $end

    1 Program: CompUnit

    2 CompUnit: Decl
    3         | FuncDef
    4         | CompUnit Decl
    5         | CompUnit FuncDef

    6 Decl: ConstDecl
    7     | VarDecl

    8 ConstDecl: T_Const BType ConstDefSeq ';'

    9 ConstDefSeq: ConstDef
   10            | ConstDefSeq ',' ConstDef

   11 BType: T_Void
   12      | T_Int

   13 ConstDef: T_Identifier '=' ConstInitVal
   14         | T_Identifier ConstArraySubSeq '=' ConstInitVal

   15 ConstArraySubSeq: '[' ConstExp ']'
   16                 | ConstArraySubSeq '[' ConstExp ']'

   17 ArraySubSeq: '[' Exp ']'
   18            | ArraySubSeq '[' Exp ']'

   19 ConstInitVal: ConstExp
   20             | '{' ConstInitValSeq '}'
   21             | '{' '}'

   22 ConstInitValSeq: ConstInitVal
   23                | ConstInitValSeq ',' ConstInitVal

   24 VarDecl: BType VarDefSeq ';'

   25 VarDefSeq: VarDef
   26          | VarDefSeq ',' VarDef

   27 VarDef: T_Identifier
   28       | T_Identifier ConstArraySubSeq
   29       | T_Identifier '=' InitVal
   30       | T_Identifier ConstArraySubSeq '=' InitVal

   31 InitVal: Exp
   32        | '{' InitValSeq '}'

   33 InitValSeq: InitVal
   34           | InitValSeq ',' InitVal

   35 FuncDef: BType T_Identifier '(' ')' Block
   36        | BType T_Identifier '(' FuncFParams ')' Block

   37 FuncFParams: FuncFParam
   38            | FuncFParams ',' FuncFParam

   39 FuncFParam: BType T_Identifier
   40           | BType T_Identifier '[' ']' ArraySubSeq

   41 Block: '{' '}'
   42      | '{' BlockItemSeq '}'

   43 BlockItemSeq: BlockItem
   44             | BlockItemSeq BlockItem

   45 BlockItem: Decl
   46          | Stmt

   47 Stmt: LVal '=' Exp ';'
   48     | Exp ';'
   49     | ';'
   50     | Block
   51     | T_If '(' Cond ')' Stmt
   52     | T_If '(' Cond ')' Stmt T_Else Stmt
   53     | T_While '(' Cond ')' Stmt
   54     | T_Break ';'
   55     | T_Continue ';'
   56     | T_Return Exp ';'
   57     | T_Return ';'

   58 Exp: AddExp

   59 Cond: LOrExp

   60 LVal: T_Identifier ArraySubSeq

   61 PrimaryExp: '(' Exp ')'
   62           | LVal
   63           | Number

   64 Number: T_IntConstant

   65 UnaryExp: PrimaryExp
   66         | T_Identifier '(' FuncRParams ')'
   67         | T_Identifier '(' ')'
   68         | UnaryOp UnaryExp

   69 UnaryOp: '+'
   70        | '-'
   71        | '!'

   72 FuncRParams: Exp
   73            | FuncRParams ',' Exp

   74 MulExp: UnaryExp
   75       | MulExp '*' UnaryExp
   76       | MulExp '/' UnaryExp
   77       | MulExp '%' UnaryExp

   78 AddExp: MulExp
   79       | AddExp '+' MulExp
   80       | AddExp '-' MulExp

   81 RelExp: AddExp
   82       | RelExp '<' AddExp
   83       | RelExp T_LessEqual AddExp
   84       | RelExp '>' AddExp
   85       | RelExp T_GreaterEqual AddExp

   86 EqExp: RelExp
   87      | EqExp T_Equal RelExp
   88      | EqExp T_NotEqual RelExp

   89 LAndExp: EqExp
   90        | LAndExp T_And EqExp

   91 LOrExp: LAndExp
   92       | LOrExp T_Or LAndExp

   93 ConstExp: AddExp


Terminals, with rules where they appear

$end (0) 0
'!' (33) 71
'%' (37) 77
'(' (40) 35 36 51 52 53 61 66 67
')' (41) 35 36 51 52 53 61 66 67
'*' (42) 75
'+' (43) 69 79
',' (44) 10 23 26 34 38 73
'-' (45) 70 80
'/' (47) 76
';' (59) 8 24 47 48 49 54 55 56 57
'<' (60) 82
'=' (61) 13 14 29 30 47
'>' (62) 84
'[' (91) 15 16 17 18 40
']' (93) 15 16 17 18 40
'{' (123) 20 21 32 41 42
'}' (125) 20 21 32 41 42
error (256)
T_Void (258) 11
T_Int (259) 12
T_Const (260) 8
T_While (261) 53
T_If (262) 51 52
T_Else (263) 52
T_Return (264) 56 57
T_Break (265) 54
T_Continue (266) 55
T_LessEqual (267) 83
T_GreaterEqual (268) 85
T_Equal (269) 87
T_NotEqual (270) 88
T_Dims (271)
T_And (272) 90
T_Or (273) 92
T_Identifier (274) 13 14 27 28 29 30 35 36 39 40 60 66 67
T_StringConstant (275)
T_IntConstant (276) 64
T_NoElse (277)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Program (41)
    on left: 1, on right: 0
CompUnit (42)
    on left: 2 3 4 5, on right: 1 4 5
Decl (43)
    on left: 6 7, on right: 2 4 45
ConstDecl (44)
    on left: 8, on right: 6
ConstDefSeq (45)
    on left: 9 10, on right: 8 10
BType (46)
    on left: 11 12, on right: 8 24 35 36 39 40
ConstDef (47)
    on left: 13 14, on right: 9 10
ConstArraySubSeq (48)
    on left: 15 16, on right: 14 16 28 30
ArraySubSeq (49)
    on left: 17 18, on right: 18 40 60
ConstInitVal (50)
    on left: 19 20 21, on right: 13 14 22 23
ConstInitValSeq (51)
    on left: 22 23, on right: 20 23
VarDecl (52)
    on left: 24, on right: 7
VarDefSeq (53)
    on left: 25 26, on right: 24 26
VarDef (54)
    on left: 27 28 29 30, on right: 25 26
InitVal (55)
    on left: 31 32, on right: 29 30 33 34
InitValSeq (56)
    on left: 33 34, on right: 32 34
FuncDef (57)
    on left: 35 36, on right: 3 5
FuncFParams (58)
    on left: 37 38, on right: 36 38
FuncFParam (59)
    on left: 39 40, on right: 37 38
Block (60)
    on left: 41 42, on right: 35 36 50
BlockItemSeq (61)
    on left: 43 44, on right: 42 44
BlockItem (62)
    on left: 45 46, on right: 43 44
Stmt (63)
    on left: 47 48 49 50 51 52 53 54 55 56 57, on right: 46 51 52 53
Exp (64)
    on left: 58, on right: 17 18 31 47 48 56 61 72 73
Cond (65)
    on left: 59, on right: 51 52 53
LVal (66)
    on left: 60, on right: 47 62
PrimaryExp (67)
    on left: 61 62 63, on right: 65
Number (68)
    on left: 64, on right: 63
UnaryExp (69)
    on left: 65 66 67 68, on right: 68 74 75 76 77
UnaryOp (70)
    on left: 69 70 71, on right: 68
FuncRParams (71)
    on left: 72 73, on right: 66 73
MulExp (72)
    on left: 74 75 76 77, on right: 75 76 77 78 79 80
AddExp (73)
    on left: 78 79 80, on right: 58 79 80 81 82 83 84 85 93
RelExp (74)
    on left: 81 82 83 84 85, on right: 82 83 84 85 86 87 88
EqExp (75)
    on left: 86 87 88, on right: 87 88 89 90
LAndExp (76)
    on left: 89 90, on right: 90 91 92
LOrExp (77)
    on left: 91 92, on right: 59 92
ConstExp (78)
    on left: 93, on right: 15 16 19


State 0

    0 $accept: . Program $end

    T_Void   shift, and go to state 1
    T_Int    shift, and go to state 2
    T_Const  shift, and go to state 3

    Program    go to state 4
    CompUnit   go to state 5
    Decl       go to state 6
    ConstDecl  go to state 7
    BType      go to state 8
    VarDecl    go to state 9
    FuncDef    go to state 10


State 1

   11 BType: T_Void .

    $default  reduce using rule 11 (BType)


State 2

   12 BType: T_Int .

    $default  reduce using rule 12 (BType)


State 3

    8 ConstDecl: T_Const . BType ConstDefSeq ';'

    T_Void  shift, and go to state 1
    T_Int   shift, and go to state 2

    BType  go to state 11


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 5

    1 Program: CompUnit .
    4 CompUnit: CompUnit . Decl
    5         | CompUnit . FuncDef

    T_Void   shift, and go to state 1
    T_Int    shift, and go to state 2
    T_Const  shift, and go to state 3

    $default  reduce using rule 1 (Program)

    Decl       go to state 13
    ConstDecl  go to state 7
    BType      go to state 8
    VarDecl    go to state 9
    FuncDef    go to state 14


State 6

    2 CompUnit: Decl .

    $default  reduce using rule 2 (CompUnit)


State 7

    6 Decl: ConstDecl .

    $default  reduce using rule 6 (Decl)


State 8

   24 VarDecl: BType . VarDefSeq ';'
   35 FuncDef: BType . T_Identifier '(' ')' Block
   36        | BType . T_Identifier '(' FuncFParams ')' Block

    T_Identifier  shift, and go to state 15

    VarDefSeq  go to state 16
    VarDef     go to state 17


State 9

    7 Decl: VarDecl .

    $default  reduce using rule 7 (Decl)


State 10

    3 CompUnit: FuncDef .

    $default  reduce using rule 3 (CompUnit)


State 11

    8 ConstDecl: T_Const BType . ConstDefSeq ';'

    T_Identifier  shift, and go to state 18

    ConstDefSeq  go to state 19
    ConstDef     go to state 20


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    4 CompUnit: CompUnit Decl .

    $default  reduce using rule 4 (CompUnit)


State 14

    5 CompUnit: CompUnit FuncDef .

    $default  reduce using rule 5 (CompUnit)


State 15

   27 VarDef: T_Identifier .
   28       | T_Identifier . ConstArraySubSeq
   29       | T_Identifier . '=' InitVal
   30       | T_Identifier . ConstArraySubSeq '=' InitVal
   35 FuncDef: BType T_Identifier . '(' ')' Block
   36        | BType T_Identifier . '(' FuncFParams ')' Block

    '='  shift, and go to state 21
    '['  shift, and go to state 22
    '('  shift, and go to state 23

    $default  reduce using rule 27 (VarDef)

    ConstArraySubSeq  go to state 24


State 16

   24 VarDecl: BType VarDefSeq . ';'
   26 VarDefSeq: VarDefSeq . ',' VarDef

    ';'  shift, and go to state 25
    ','  shift, and go to state 26


State 17

   25 VarDefSeq: VarDef .

    $default  reduce using rule 25 (VarDefSeq)


State 18

   13 ConstDef: T_Identifier . '=' ConstInitVal
   14         | T_Identifier . ConstArraySubSeq '=' ConstInitVal

    '='  shift, and go to state 27
    '['  shift, and go to state 22

    ConstArraySubSeq  go to state 28


State 19

    8 ConstDecl: T_Const BType ConstDefSeq . ';'
   10 ConstDefSeq: ConstDefSeq . ',' ConstDef

    ';'  shift, and go to state 29
    ','  shift, and go to state 30


State 20

    9 ConstDefSeq: ConstDef .

    $default  reduce using rule 9 (ConstDefSeq)


State 21

   29 VarDef: T_Identifier '=' . InitVal

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '{'            shift, and go to state 33
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    InitVal     go to state 38
    Exp         go to state 39
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 22

   15 ConstArraySubSeq: '[' . ConstExp ']'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 47
    ConstExp    go to state 48


State 23

   35 FuncDef: BType T_Identifier '(' . ')' Block
   36        | BType T_Identifier '(' . FuncFParams ')' Block

    T_Void  shift, and go to state 1
    T_Int   shift, and go to state 2
    ')'     shift, and go to state 49

    BType        go to state 50
    FuncFParams  go to state 51
    FuncFParam   go to state 52


State 24

   16 ConstArraySubSeq: ConstArraySubSeq . '[' ConstExp ']'
   28 VarDef: T_Identifier ConstArraySubSeq .
   30       | T_Identifier ConstArraySubSeq . '=' InitVal

    '='  shift, and go to state 53
    '['  shift, and go to state 54

    $default  reduce using rule 28 (VarDef)


State 25

   24 VarDecl: BType VarDefSeq ';' .

    $default  reduce using rule 24 (VarDecl)


State 26

   26 VarDefSeq: VarDefSeq ',' . VarDef

    T_Identifier  shift, and go to state 55

    VarDef  go to state 56


State 27

   13 ConstDef: T_Identifier '=' . ConstInitVal

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '{'            shift, and go to state 57
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    ConstInitVal  go to state 58
    LVal          go to state 40
    PrimaryExp    go to state 41
    Number        go to state 42
    UnaryExp      go to state 43
    UnaryOp       go to state 44
    MulExp        go to state 45
    AddExp        go to state 47
    ConstExp      go to state 59


State 28

   14 ConstDef: T_Identifier ConstArraySubSeq . '=' ConstInitVal
   16 ConstArraySubSeq: ConstArraySubSeq . '[' ConstExp ']'

    '='  shift, and go to state 60
    '['  shift, and go to state 54


State 29

    8 ConstDecl: T_Const BType ConstDefSeq ';' .

    $default  reduce using rule 8 (ConstDecl)


State 30

   10 ConstDefSeq: ConstDefSeq ',' . ConstDef

    T_Identifier  shift, and go to state 18

    ConstDef  go to state 61


State 31

   60 LVal: T_Identifier . ArraySubSeq
   66 UnaryExp: T_Identifier . '(' FuncRParams ')'
   67         | T_Identifier . '(' ')'

    '['  shift, and go to state 62
    '('  shift, and go to state 63

    ArraySubSeq  go to state 64


State 32

   64 Number: T_IntConstant .

    $default  reduce using rule 64 (Number)


State 33

   32 InitVal: '{' . InitValSeq '}'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '{'            shift, and go to state 33
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    InitVal     go to state 65
    InitValSeq  go to state 66
    Exp         go to state 39
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 34

   61 PrimaryExp: '(' . Exp ')'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Exp         go to state 67
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 35

   69 UnaryOp: '+' .

    $default  reduce using rule 69 (UnaryOp)


State 36

   70 UnaryOp: '-' .

    $default  reduce using rule 70 (UnaryOp)


State 37

   71 UnaryOp: '!' .

    $default  reduce using rule 71 (UnaryOp)


State 38

   29 VarDef: T_Identifier '=' InitVal .

    $default  reduce using rule 29 (VarDef)


State 39

   31 InitVal: Exp .

    $default  reduce using rule 31 (InitVal)


State 40

   62 PrimaryExp: LVal .

    $default  reduce using rule 62 (PrimaryExp)


State 41

   65 UnaryExp: PrimaryExp .

    $default  reduce using rule 65 (UnaryExp)


State 42

   63 PrimaryExp: Number .

    $default  reduce using rule 63 (PrimaryExp)


State 43

   74 MulExp: UnaryExp .

    $default  reduce using rule 74 (MulExp)


State 44

   68 UnaryExp: UnaryOp . UnaryExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 68
    UnaryOp     go to state 44


State 45

   75 MulExp: MulExp . '*' UnaryExp
   76       | MulExp . '/' UnaryExp
   77       | MulExp . '%' UnaryExp
   78 AddExp: MulExp .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71

    $default  reduce using rule 78 (AddExp)


State 46

   58 Exp: AddExp .
   79 AddExp: AddExp . '+' MulExp
   80       | AddExp . '-' MulExp

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 58 (Exp)


State 47

   79 AddExp: AddExp . '+' MulExp
   80       | AddExp . '-' MulExp
   93 ConstExp: AddExp .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 93 (ConstExp)


State 48

   15 ConstArraySubSeq: '[' ConstExp . ']'

    ']'  shift, and go to state 74


State 49

   35 FuncDef: BType T_Identifier '(' ')' . Block

    '{'  shift, and go to state 75

    Block  go to state 76


State 50

   39 FuncFParam: BType . T_Identifier
   40           | BType . T_Identifier '[' ']' ArraySubSeq

    T_Identifier  shift, and go to state 77


State 51

   36 FuncDef: BType T_Identifier '(' FuncFParams . ')' Block
   38 FuncFParams: FuncFParams . ',' FuncFParam

    ','  shift, and go to state 78
    ')'  shift, and go to state 79


State 52

   37 FuncFParams: FuncFParam .

    $default  reduce using rule 37 (FuncFParams)


State 53

   30 VarDef: T_Identifier ConstArraySubSeq '=' . InitVal

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '{'            shift, and go to state 33
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    InitVal     go to state 80
    Exp         go to state 39
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 54

   16 ConstArraySubSeq: ConstArraySubSeq '[' . ConstExp ']'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 47
    ConstExp    go to state 81


State 55

   27 VarDef: T_Identifier .
   28       | T_Identifier . ConstArraySubSeq
   29       | T_Identifier . '=' InitVal
   30       | T_Identifier . ConstArraySubSeq '=' InitVal

    '='  shift, and go to state 21
    '['  shift, and go to state 22

    $default  reduce using rule 27 (VarDef)

    ConstArraySubSeq  go to state 24


State 56

   26 VarDefSeq: VarDefSeq ',' VarDef .

    $default  reduce using rule 26 (VarDefSeq)


State 57

   20 ConstInitVal: '{' . ConstInitValSeq '}'
   21             | '{' . '}'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '{'            shift, and go to state 57
    '}'            shift, and go to state 82
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    ConstInitVal     go to state 83
    ConstInitValSeq  go to state 84
    LVal             go to state 40
    PrimaryExp       go to state 41
    Number           go to state 42
    UnaryExp         go to state 43
    UnaryOp          go to state 44
    MulExp           go to state 45
    AddExp           go to state 47
    ConstExp         go to state 59


State 58

   13 ConstDef: T_Identifier '=' ConstInitVal .

    $default  reduce using rule 13 (ConstDef)


State 59

   19 ConstInitVal: ConstExp .

    $default  reduce using rule 19 (ConstInitVal)


State 60

   14 ConstDef: T_Identifier ConstArraySubSeq '=' . ConstInitVal

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '{'            shift, and go to state 57
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    ConstInitVal  go to state 85
    LVal          go to state 40
    PrimaryExp    go to state 41
    Number        go to state 42
    UnaryExp      go to state 43
    UnaryOp       go to state 44
    MulExp        go to state 45
    AddExp        go to state 47
    ConstExp      go to state 59


State 61

   10 ConstDefSeq: ConstDefSeq ',' ConstDef .

    $default  reduce using rule 10 (ConstDefSeq)


State 62

   17 ArraySubSeq: '[' . Exp ']'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Exp         go to state 86
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 63

   66 UnaryExp: T_Identifier '(' . FuncRParams ')'
   67         | T_Identifier '(' . ')'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    ')'            shift, and go to state 87
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Exp          go to state 88
    LVal         go to state 40
    PrimaryExp   go to state 41
    Number       go to state 42
    UnaryExp     go to state 43
    UnaryOp      go to state 44
    FuncRParams  go to state 89
    MulExp       go to state 45
    AddExp       go to state 46


State 64

   18 ArraySubSeq: ArraySubSeq . '[' Exp ']'
   60 LVal: T_Identifier ArraySubSeq .

    '['  shift, and go to state 90

    $default  reduce using rule 60 (LVal)


State 65

   33 InitValSeq: InitVal .

    $default  reduce using rule 33 (InitValSeq)


State 66

   32 InitVal: '{' InitValSeq . '}'
   34 InitValSeq: InitValSeq . ',' InitVal

    ','  shift, and go to state 91
    '}'  shift, and go to state 92


State 67

   61 PrimaryExp: '(' Exp . ')'

    ')'  shift, and go to state 93


State 68

   68 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 68 (UnaryExp)


State 69

   75 MulExp: MulExp '*' . UnaryExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 94
    UnaryOp     go to state 44


State 70

   76 MulExp: MulExp '/' . UnaryExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 95
    UnaryOp     go to state 44


State 71

   77 MulExp: MulExp '%' . UnaryExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 96
    UnaryOp     go to state 44


State 72

   79 AddExp: AddExp '+' . MulExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 97


State 73

   80 AddExp: AddExp '-' . MulExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 98


State 74

   15 ConstArraySubSeq: '[' ConstExp ']' .

    $default  reduce using rule 15 (ConstArraySubSeq)


State 75

   41 Block: '{' . '}'
   42      | '{' . BlockItemSeq '}'

    T_Void         shift, and go to state 1
    T_Int          shift, and go to state 2
    T_Const        shift, and go to state 3
    T_While        shift, and go to state 99
    T_If           shift, and go to state 100
    T_Return       shift, and go to state 101
    T_Break        shift, and go to state 102
    T_Continue     shift, and go to state 103
    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    ';'            shift, and go to state 104
    '{'            shift, and go to state 75
    '}'            shift, and go to state 105
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Decl          go to state 106
    ConstDecl     go to state 7
    BType         go to state 107
    VarDecl       go to state 9
    Block         go to state 108
    BlockItemSeq  go to state 109
    BlockItem     go to state 110
    Stmt          go to state 111
    Exp           go to state 112
    LVal          go to state 113
    PrimaryExp    go to state 41
    Number        go to state 42
    UnaryExp      go to state 43
    UnaryOp       go to state 44
    MulExp        go to state 45
    AddExp        go to state 46


State 76

   35 FuncDef: BType T_Identifier '(' ')' Block .

    $default  reduce using rule 35 (FuncDef)


State 77

   39 FuncFParam: BType T_Identifier .
   40           | BType T_Identifier . '[' ']' ArraySubSeq

    '['  shift, and go to state 114

    $default  reduce using rule 39 (FuncFParam)


State 78

   38 FuncFParams: FuncFParams ',' . FuncFParam

    T_Void  shift, and go to state 1
    T_Int   shift, and go to state 2

    BType       go to state 50
    FuncFParam  go to state 115


State 79

   36 FuncDef: BType T_Identifier '(' FuncFParams ')' . Block

    '{'  shift, and go to state 75

    Block  go to state 116


State 80

   30 VarDef: T_Identifier ConstArraySubSeq '=' InitVal .

    $default  reduce using rule 30 (VarDef)


State 81

   16 ConstArraySubSeq: ConstArraySubSeq '[' ConstExp . ']'

    ']'  shift, and go to state 117


State 82

   21 ConstInitVal: '{' '}' .

    $default  reduce using rule 21 (ConstInitVal)


State 83

   22 ConstInitValSeq: ConstInitVal .

    $default  reduce using rule 22 (ConstInitValSeq)


State 84

   20 ConstInitVal: '{' ConstInitValSeq . '}'
   23 ConstInitValSeq: ConstInitValSeq . ',' ConstInitVal

    ','  shift, and go to state 118
    '}'  shift, and go to state 119


State 85

   14 ConstDef: T_Identifier ConstArraySubSeq '=' ConstInitVal .

    $default  reduce using rule 14 (ConstDef)


State 86

   17 ArraySubSeq: '[' Exp . ']'

    ']'  shift, and go to state 120


State 87

   67 UnaryExp: T_Identifier '(' ')' .

    $default  reduce using rule 67 (UnaryExp)


State 88

   72 FuncRParams: Exp .

    $default  reduce using rule 72 (FuncRParams)


State 89

   66 UnaryExp: T_Identifier '(' FuncRParams . ')'
   73 FuncRParams: FuncRParams . ',' Exp

    ','  shift, and go to state 121
    ')'  shift, and go to state 122


State 90

   18 ArraySubSeq: ArraySubSeq '[' . Exp ']'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Exp         go to state 123
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 91

   34 InitValSeq: InitValSeq ',' . InitVal

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '{'            shift, and go to state 33
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    InitVal     go to state 124
    Exp         go to state 39
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 92

   32 InitVal: '{' InitValSeq '}' .

    $default  reduce using rule 32 (InitVal)


State 93

   61 PrimaryExp: '(' Exp ')' .

    $default  reduce using rule 61 (PrimaryExp)


State 94

   75 MulExp: MulExp '*' UnaryExp .

    $default  reduce using rule 75 (MulExp)


State 95

   76 MulExp: MulExp '/' UnaryExp .

    $default  reduce using rule 76 (MulExp)


State 96

   77 MulExp: MulExp '%' UnaryExp .

    $default  reduce using rule 77 (MulExp)


State 97

   75 MulExp: MulExp . '*' UnaryExp
   76       | MulExp . '/' UnaryExp
   77       | MulExp . '%' UnaryExp
   79 AddExp: AddExp '+' MulExp .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71

    $default  reduce using rule 79 (AddExp)


State 98

   75 MulExp: MulExp . '*' UnaryExp
   76       | MulExp . '/' UnaryExp
   77       | MulExp . '%' UnaryExp
   80 AddExp: AddExp '-' MulExp .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71

    $default  reduce using rule 80 (AddExp)


State 99

   53 Stmt: T_While . '(' Cond ')' Stmt

    '('  shift, and go to state 125


State 100

   51 Stmt: T_If . '(' Cond ')' Stmt
   52     | T_If . '(' Cond ')' Stmt T_Else Stmt

    '('  shift, and go to state 126


State 101

   56 Stmt: T_Return . Exp ';'
   57     | T_Return . ';'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    ';'            shift, and go to state 127
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Exp         go to state 128
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 102

   54 Stmt: T_Break . ';'

    ';'  shift, and go to state 129


State 103

   55 Stmt: T_Continue . ';'

    ';'  shift, and go to state 130


State 104

   49 Stmt: ';' .

    $default  reduce using rule 49 (Stmt)


State 105

   41 Block: '{' '}' .

    $default  reduce using rule 41 (Block)


State 106

   45 BlockItem: Decl .

    $default  reduce using rule 45 (BlockItem)


State 107

   24 VarDecl: BType . VarDefSeq ';'

    T_Identifier  shift, and go to state 55

    VarDefSeq  go to state 16
    VarDef     go to state 17


State 108

   50 Stmt: Block .

    $default  reduce using rule 50 (Stmt)


State 109

   42 Block: '{' BlockItemSeq . '}'
   44 BlockItemSeq: BlockItemSeq . BlockItem

    T_Void         shift, and go to state 1
    T_Int          shift, and go to state 2
    T_Const        shift, and go to state 3
    T_While        shift, and go to state 99
    T_If           shift, and go to state 100
    T_Return       shift, and go to state 101
    T_Break        shift, and go to state 102
    T_Continue     shift, and go to state 103
    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    ';'            shift, and go to state 104
    '{'            shift, and go to state 75
    '}'            shift, and go to state 131
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Decl        go to state 106
    ConstDecl   go to state 7
    BType       go to state 107
    VarDecl     go to state 9
    Block       go to state 108
    BlockItem   go to state 132
    Stmt        go to state 111
    Exp         go to state 112
    LVal        go to state 113
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 110

   43 BlockItemSeq: BlockItem .

    $default  reduce using rule 43 (BlockItemSeq)


State 111

   46 BlockItem: Stmt .

    $default  reduce using rule 46 (BlockItem)


State 112

   48 Stmt: Exp . ';'

    ';'  shift, and go to state 133


State 113

   47 Stmt: LVal . '=' Exp ';'
   62 PrimaryExp: LVal .

    '='  shift, and go to state 134

    $default  reduce using rule 62 (PrimaryExp)


State 114

   40 FuncFParam: BType T_Identifier '[' . ']' ArraySubSeq

    ']'  shift, and go to state 135


State 115

   38 FuncFParams: FuncFParams ',' FuncFParam .

    $default  reduce using rule 38 (FuncFParams)


State 116

   36 FuncDef: BType T_Identifier '(' FuncFParams ')' Block .

    $default  reduce using rule 36 (FuncDef)


State 117

   16 ConstArraySubSeq: ConstArraySubSeq '[' ConstExp ']' .

    $default  reduce using rule 16 (ConstArraySubSeq)


State 118

   23 ConstInitValSeq: ConstInitValSeq ',' . ConstInitVal

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '{'            shift, and go to state 57
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    ConstInitVal  go to state 136
    LVal          go to state 40
    PrimaryExp    go to state 41
    Number        go to state 42
    UnaryExp      go to state 43
    UnaryOp       go to state 44
    MulExp        go to state 45
    AddExp        go to state 47
    ConstExp      go to state 59


State 119

   20 ConstInitVal: '{' ConstInitValSeq '}' .

    $default  reduce using rule 20 (ConstInitVal)


State 120

   17 ArraySubSeq: '[' Exp ']' .

    $default  reduce using rule 17 (ArraySubSeq)


State 121

   73 FuncRParams: FuncRParams ',' . Exp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Exp         go to state 137
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 122

   66 UnaryExp: T_Identifier '(' FuncRParams ')' .

    $default  reduce using rule 66 (UnaryExp)


State 123

   18 ArraySubSeq: ArraySubSeq '[' Exp . ']'

    ']'  shift, and go to state 138


State 124

   34 InitValSeq: InitValSeq ',' InitVal .

    $default  reduce using rule 34 (InitValSeq)


State 125

   53 Stmt: T_While '(' . Cond ')' Stmt

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Cond        go to state 139
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 140
    RelExp      go to state 141
    EqExp       go to state 142
    LAndExp     go to state 143
    LOrExp      go to state 144


State 126

   51 Stmt: T_If '(' . Cond ')' Stmt
   52     | T_If '(' . Cond ')' Stmt T_Else Stmt

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Cond        go to state 145
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 140
    RelExp      go to state 141
    EqExp       go to state 142
    LAndExp     go to state 143
    LOrExp      go to state 144


State 127

   57 Stmt: T_Return ';' .

    $default  reduce using rule 57 (Stmt)


State 128

   56 Stmt: T_Return Exp . ';'

    ';'  shift, and go to state 146


State 129

   54 Stmt: T_Break ';' .

    $default  reduce using rule 54 (Stmt)


State 130

   55 Stmt: T_Continue ';' .

    $default  reduce using rule 55 (Stmt)


State 131

   42 Block: '{' BlockItemSeq '}' .

    $default  reduce using rule 42 (Block)


State 132

   44 BlockItemSeq: BlockItemSeq BlockItem .

    $default  reduce using rule 44 (BlockItemSeq)


State 133

   48 Stmt: Exp ';' .

    $default  reduce using rule 48 (Stmt)


State 134

   47 Stmt: LVal '=' . Exp ';'

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Exp         go to state 147
    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 135

   40 FuncFParam: BType T_Identifier '[' ']' . ArraySubSeq

    '['  shift, and go to state 62

    ArraySubSeq  go to state 148


State 136

   23 ConstInitValSeq: ConstInitValSeq ',' ConstInitVal .

    $default  reduce using rule 23 (ConstInitValSeq)


State 137

   73 FuncRParams: FuncRParams ',' Exp .

    $default  reduce using rule 73 (FuncRParams)


State 138

   18 ArraySubSeq: ArraySubSeq '[' Exp ']' .

    $default  reduce using rule 18 (ArraySubSeq)


State 139

   53 Stmt: T_While '(' Cond . ')' Stmt

    ')'  shift, and go to state 149


State 140

   79 AddExp: AddExp . '+' MulExp
   80       | AddExp . '-' MulExp
   81 RelExp: AddExp .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 81 (RelExp)


State 141

   82 RelExp: RelExp . '<' AddExp
   83       | RelExp . T_LessEqual AddExp
   84       | RelExp . '>' AddExp
   85       | RelExp . T_GreaterEqual AddExp
   86 EqExp: RelExp .

    T_LessEqual     shift, and go to state 150
    T_GreaterEqual  shift, and go to state 151
    '<'             shift, and go to state 152
    '>'             shift, and go to state 153

    $default  reduce using rule 86 (EqExp)


State 142

   87 EqExp: EqExp . T_Equal RelExp
   88      | EqExp . T_NotEqual RelExp
   89 LAndExp: EqExp .

    T_Equal     shift, and go to state 154
    T_NotEqual  shift, and go to state 155

    $default  reduce using rule 89 (LAndExp)


State 143

   90 LAndExp: LAndExp . T_And EqExp
   91 LOrExp: LAndExp .

    T_And  shift, and go to state 156

    $default  reduce using rule 91 (LOrExp)


State 144

   59 Cond: LOrExp .
   92 LOrExp: LOrExp . T_Or LAndExp

    T_Or  shift, and go to state 157

    $default  reduce using rule 59 (Cond)


State 145

   51 Stmt: T_If '(' Cond . ')' Stmt
   52     | T_If '(' Cond . ')' Stmt T_Else Stmt

    ')'  shift, and go to state 158


State 146

   56 Stmt: T_Return Exp ';' .

    $default  reduce using rule 56 (Stmt)


State 147

   47 Stmt: LVal '=' Exp . ';'

    ';'  shift, and go to state 159


State 148

   18 ArraySubSeq: ArraySubSeq . '[' Exp ']'
   40 FuncFParam: BType T_Identifier '[' ']' ArraySubSeq .

    '['  shift, and go to state 90

    $default  reduce using rule 40 (FuncFParam)


State 149

   53 Stmt: T_While '(' Cond ')' . Stmt

    T_While        shift, and go to state 99
    T_If           shift, and go to state 100
    T_Return       shift, and go to state 101
    T_Break        shift, and go to state 102
    T_Continue     shift, and go to state 103
    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    ';'            shift, and go to state 104
    '{'            shift, and go to state 75
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Block       go to state 108
    Stmt        go to state 160
    Exp         go to state 112
    LVal        go to state 113
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 150

   83 RelExp: RelExp T_LessEqual . AddExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 161


State 151

   85 RelExp: RelExp T_GreaterEqual . AddExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 162


State 152

   82 RelExp: RelExp '<' . AddExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 163


State 153

   84 RelExp: RelExp '>' . AddExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 164


State 154

   87 EqExp: EqExp T_Equal . RelExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 140
    RelExp      go to state 165


State 155

   88 EqExp: EqExp T_NotEqual . RelExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 140
    RelExp      go to state 166


State 156

   90 LAndExp: LAndExp T_And . EqExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 140
    RelExp      go to state 141
    EqExp       go to state 167


State 157

   92 LOrExp: LOrExp T_Or . LAndExp

    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    LVal        go to state 40
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 140
    RelExp      go to state 141
    EqExp       go to state 142
    LAndExp     go to state 168


State 158

   51 Stmt: T_If '(' Cond ')' . Stmt
   52     | T_If '(' Cond ')' . Stmt T_Else Stmt

    T_While        shift, and go to state 99
    T_If           shift, and go to state 100
    T_Return       shift, and go to state 101
    T_Break        shift, and go to state 102
    T_Continue     shift, and go to state 103
    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    ';'            shift, and go to state 104
    '{'            shift, and go to state 75
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Block       go to state 108
    Stmt        go to state 169
    Exp         go to state 112
    LVal        go to state 113
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 159

   47 Stmt: LVal '=' Exp ';' .

    $default  reduce using rule 47 (Stmt)


State 160

   53 Stmt: T_While '(' Cond ')' Stmt .

    $default  reduce using rule 53 (Stmt)


State 161

   79 AddExp: AddExp . '+' MulExp
   80       | AddExp . '-' MulExp
   83 RelExp: RelExp T_LessEqual AddExp .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 83 (RelExp)


State 162

   79 AddExp: AddExp . '+' MulExp
   80       | AddExp . '-' MulExp
   85 RelExp: RelExp T_GreaterEqual AddExp .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 85 (RelExp)


State 163

   79 AddExp: AddExp . '+' MulExp
   80       | AddExp . '-' MulExp
   82 RelExp: RelExp '<' AddExp .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 82 (RelExp)


State 164

   79 AddExp: AddExp . '+' MulExp
   80       | AddExp . '-' MulExp
   84 RelExp: RelExp '>' AddExp .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 84 (RelExp)


State 165

   82 RelExp: RelExp . '<' AddExp
   83       | RelExp . T_LessEqual AddExp
   84       | RelExp . '>' AddExp
   85       | RelExp . T_GreaterEqual AddExp
   87 EqExp: EqExp T_Equal RelExp .

    T_LessEqual     shift, and go to state 150
    T_GreaterEqual  shift, and go to state 151
    '<'             shift, and go to state 152
    '>'             shift, and go to state 153

    $default  reduce using rule 87 (EqExp)


State 166

   82 RelExp: RelExp . '<' AddExp
   83       | RelExp . T_LessEqual AddExp
   84       | RelExp . '>' AddExp
   85       | RelExp . T_GreaterEqual AddExp
   88 EqExp: EqExp T_NotEqual RelExp .

    T_LessEqual     shift, and go to state 150
    T_GreaterEqual  shift, and go to state 151
    '<'             shift, and go to state 152
    '>'             shift, and go to state 153

    $default  reduce using rule 88 (EqExp)


State 167

   87 EqExp: EqExp . T_Equal RelExp
   88      | EqExp . T_NotEqual RelExp
   90 LAndExp: LAndExp T_And EqExp .

    T_Equal     shift, and go to state 154
    T_NotEqual  shift, and go to state 155

    $default  reduce using rule 90 (LAndExp)


State 168

   90 LAndExp: LAndExp . T_And EqExp
   92 LOrExp: LOrExp T_Or LAndExp .

    T_And  shift, and go to state 156

    $default  reduce using rule 92 (LOrExp)


State 169

   51 Stmt: T_If '(' Cond ')' Stmt .
   52     | T_If '(' Cond ')' Stmt . T_Else Stmt

    T_Else  shift, and go to state 170

    $default  reduce using rule 51 (Stmt)


State 170

   52 Stmt: T_If '(' Cond ')' Stmt T_Else . Stmt

    T_While        shift, and go to state 99
    T_If           shift, and go to state 100
    T_Return       shift, and go to state 101
    T_Break        shift, and go to state 102
    T_Continue     shift, and go to state 103
    T_Identifier   shift, and go to state 31
    T_IntConstant  shift, and go to state 32
    ';'            shift, and go to state 104
    '{'            shift, and go to state 75
    '('            shift, and go to state 34
    '+'            shift, and go to state 35
    '-'            shift, and go to state 36
    '!'            shift, and go to state 37

    Block       go to state 108
    Stmt        go to state 171
    Exp         go to state 112
    LVal        go to state 113
    PrimaryExp  go to state 41
    Number      go to state 42
    UnaryExp    go to state 43
    UnaryOp     go to state 44
    MulExp      go to state 45
    AddExp      go to state 46


State 171

   52 Stmt: T_If '(' Cond ')' Stmt T_Else Stmt .

    $default  reduce using rule 52 (Stmt)
