            
编译单元 CompUnit         → DeclList 
声明列表 DeclList         → DeclList  
                          | Decl     
声明 Decl                 → ConstDecl | VarDecl | FuncDecl
常量声明 ConstDecl        → 'const' BType ConstDefList ';' 
基本类型 BType            → 'int' | 'void'                               //void只会在function之前出现
常量定义列表 ConstDefList → ConstDef | ConstDefList ',' ConstDef

常数定义 ConstDef         → Ident '=' ConstInitVal | Ident ArrayCExpList '=' ConstInitVal        
                                                                    //ArrayCExpList在读入时忽略第一个参数，入a[3][4],忽略3只读入4
数组参数列表 ArrayCExpList→ '['Exp']' | ArrayCExpList'['Exp']' | //可以为空
常量初值 ConstInitVal     → ConstExp  | '{' ConstExpList '}' 
常量初值列表 ConstExpList → ConstExp  | ConstExpList ',' ConstExp
变量声明 VarDecl          → Var ';' 
变量 Var                  → BType VarDefList
变量定义列表 VarDefList   → VarDef | VarDefList ',' VarDef

变量定义 VarDef           → Ident ArrayCExpList | Ident ArrayCExpList '=' InitVal 

变量初值 InitVal          → Exp | '{' ExpList '}' 
变量初值列表 ExpList      → Exp  | ExpList ',' Exp
函数定义 FuncDef          → BType Ident '(' FuncFParamList ')' Block   
函数形参表 FuncFParamList → FuncFParam | FuncFParamList ',' FuncFParam |  //可以为空

函数形参 FuncFParam       → Var

语句块 Block              → '{' BlockItemList '}'
语句块项列表 BlockItemList → BlockItem | BlockItemList BlockItem | //可以为空
语句块项 BlockItem        → Decl | Stmt 
语句 Stmt                 → LVal '=' Exp ';' 
                          | ';' | Exp | Block 
                          | 'if' '( Cond ')' Stmt 
                          | 'if' '( Cond ')' Stmt 'else' Stmt
                          | 'while' '(' Cond ')' Stmt 
                          | 'break' ';'  
                          | 'continue' ';' 
                          | 'return' [Exp] ';' 
表达式 Exp                → AddExp   注：SysY 表达式是 int 型表达式 
条件表达式 Cond           → LOrExp  

左值表达式 LVal           → Ident {'[' Exp ']'} 

Expr              → LVal '=' Expr               
                  | LVal                        
                  | IntConstant                 
                  | Call                         
                  | '(' Expr ')'                  
                  | Expr '+' Expr                 
                  | Expr '-' Expr                 
                  | Expr '*' Expr                 
                  | Expr '/' Expr                
                  | Expr '%' Expr                
                  | '-' Expr %prec T_UnaryMinus   
                  | '+' Expr %prec T_UnaryMinus   
                  | Expr '<' Expr                
                  | Expr <= Expr        
                  | Expr '>' Expr                
                  | Expr '>=' Expr      
                  | Expr '==' Expr             
                  | Expr '!=' Expr          
                  | Expr '&&' Expr              
                  | Expr '||' Expr                
                  | '!' Expr      

Call              → Identifier '(' ExpList ')'  
                  

说明：
尽量去掉{}和[]匹配，所有{}匹配用List表示，在动作中同样也建立一个相应对象的List，有关List的详细信息参见list.h
非终结符都有其对应的类，使用new创建相应对象，在构造函数中自动完成ast搭建
关于array的声明中Type只记录其元素类型，数组大小记录在Identifier中